scalar GraphQLDate

type Query {
  info: String!
  clients(filter: String, skip: Int, first: Int, orderBy: ClientOrderByInput): [Client!]!
  client(id: ID!): Client
}
type Mutation {
  post(name: String!): Client!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}
type Client {
  id: ID
  name: String
  createdAt: GraphQLDate
  createdBy: User
}
type AuthPayload {
  token: String
  user: User
}
type User {
  id: ID!
  name: String!
  email: String!
}
type Subscription {
  newClient: Client
}
enum ClientOrderByInput {
  name_ASC
  name_DESC
  createdAt_ASC
  createdAt_DESC
}